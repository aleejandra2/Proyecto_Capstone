# Generated by Django 5.2.6 on 2025-10-03 02:17

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('LevelUp', '0002_alter_usuario_rut'),
    ]

    operations = [
        migrations.AddField(
            model_name='actividad',
            name='docente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actividades_creadas', to='LevelUp.docente'),
        ),
        migrations.AddField(
            model_name='actividad',
            name='es_publicada',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='actividad',
            name='fecha_cierre',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='actividad',
            name='fecha_publicacion',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='actividad',
            name='xp_total',
            field=models.PositiveIntegerField(default=100, help_text='XP base proporcional al puntaje obtenido'),
        ),
        migrations.CreateModel(
            name='ItemActividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('mcq', 'Opción múltiple'), ('tf', 'Verdadero/Falso'), ('text', 'Respuesta de texto'), ('image', 'Pregunta con imagen'), ('interactive', 'Interactiva (embed/url)'), ('game', 'Juego (embed)')], max_length=20)),
                ('enunciado', models.TextField()),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='actividades/items')),
                ('datos', models.JSONField(blank=True, default=dict)),
                ('puntaje', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('orden', models.PositiveIntegerField(default=0)),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='LevelUp.actividad')),
            ],
            options={
                'ordering': ['orden', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iniciado_en', models.DateTimeField(auto_now_add=True)),
                ('enviado_en', models.DateTimeField(blank=True, null=True)),
                ('finalizado', models.BooleanField(default=False)),
                ('xp_obtenido', models.PositiveIntegerField(default=0)),
                ('calificacion', models.FloatField(blank=True, null=True)),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='LevelUp.actividad')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='LevelUp.estudiante')),
            ],
            options={
                'unique_together': {('actividad', 'estudiante')},
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.JSONField(blank=True, default=dict)),
                ('es_correcta', models.BooleanField(default=False)),
                ('puntaje_obtenido', models.PositiveIntegerField(default=0)),
                ('respondido_en', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='LevelUp.itemactividad')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='LevelUp.submission')),
            ],
            options={
                'unique_together': {('submission', 'item')},
            },
        ),
    ]
